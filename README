Designing the builder.
Item is the base unit of the project. It hold all type of data. It can be single item type, an object or a container.

Item has 
type - single, object, container
flags - mandatory, remove, empty ,
name - item name always mandatory
data_type - type of data hold by the item

Methods.
create(const SubString& v)  -- Find subitem or create item for container
close(char*,size)   -- done with this item, validated
Set(const std::string& ) - Item has to interpret this
Set(const char* v) - Item has to interpret this
Set(const SubString& v)
Set(T& val) - it is hard to figure out with method call base on type
Item has to support set by string and by type.( invalid argument is throw by default)


Events comming from des-serializer can be
CreateItem(char*, size_t) - a item will  be create or open item for written
CloseItem(char*,size) - done with the item
Value(char*,size)

Text Format ---> Parser --> Handler ---> items
Handler : keep item status like opened, check for closing with the right name.

Substring. 
 size == 0 means zero end string.
 not able to hold a nullptr or a pointer to a not valid place
